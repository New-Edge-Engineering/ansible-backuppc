---
# Software installation
- name: ensure packages are installed
  apt: pkg={{item}}
  with_items:
    - backuppc
    - rsync
    - winbind
    - samba
    - python-passlib # ansible htpasswd support
  tags:
    - backuppc
    - packages

# Software fixes
- name: add missing $Conf{Ping6Path}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{Ping6Path}"
    line="$Conf{Ping6Path} = '/bin/ping6';"
  notify:
    - restart backuppc
  tags:
    - backuppc
    - packages
    - fix

- name: apply www.tolaris.com patches # see http://www.tolaris.com/2012/05/17/backuppc-on-ubuntu-12-04/
  shell: wget -q http://www.tolaris.com/blog/wp-content/uploads/2012/05/BackupPC-3.2.1-CVE-2011-170886.diff http://www.tolaris.com/blog/wp-content/uploads/2012/05/BackupPC-3.2.1-no_blank_email.diff -O- | patch -p0 -N -r - -d /usr/share/backuppc/
  notify:
    - restart backuppc
  ignore_errors: yes
  tags:
    - backuppc
    - packages
    - fix

# Software configuration
- name: update configuration $Conf{EMailFromUserName}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{EMailFromUserName}"
    line="$Conf{EMailFromUserName} = 'backuppc@{{ backuppc_domain }}';"
  notify:
    - restart backuppc
  tags:
    - backuppc
    - configuration

- name: update configuration $Conf{EMailUserDestDomain}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{EMailUserDestDomain}"
    line="$Conf{EMailUserDestDomain} = '@{{ backuppc_email_domain }}';"
  tags:
    - backuppc
    - configuration

- name: update configuration $Conf{CgiURL}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{CgiURL}"
    line="$Conf{CgiURL} = 'http://backuppc.{{ backuppc_email_domain }}/backuppc/index.cgi';"
  tags:
    - backuppc
    - configuration

- name: update configuration $Conf{TarClientCmd}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{TarClientCmd}"
    line="$Conf{TarClientCmd} = '$sshPath -q -x -n -l backuppc $host'"  # env LC_ALL=C $tarPath -x -p --numeric-owner --same-owner -v -f - -C $shareName+';"
  tags:
    - backuppc
    - configuration

- name: update configuration $Conf{TarClientRestoreCmd}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{TarClientRestoreCmd}"
    line="$Conf{TarClientRestoreCmd} = '$sshPath -q -x -l backuppc $host'"  # env LC_ALL=C $tarPath -x -p --numeric-owner --same-owner -v -f - -C $shareName+';"
  tags:
    - backuppc
    - configuration

- name: update configuration $Conf{RsyncClientCmd}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{RsyncClientCmd}"
    line="$Conf{RsyncClientCmd} = '$sshPath -q -x -l backuppc $host $rsyncPath $argList+';"
  tags:
    - backuppc
    - configuration

- name: update configuration $Conf{RsyncClientRestoreCmd}
  lineinfile:
    dest=/etc/backuppc/config.pl
    backrefs=yes
    regexp="^\\$Conf{RsyncClientRestoreCmd}"
    line="$Conf{RsyncClientRestoreCmd} = '$sshPath -q -x -l backuppc $host $rsyncPath $argList+';"
  tags:
    - backuppc
    - configuration

#  host setup
- name: create hosts
  lineinfile:
    dest=/etc/backuppc/hosts
    line="{{ item.name }} 0 {{ item.contact|default('backuppc') }} {{ item.user|default('') }}"
  with_items: backuppc_hosts
  notify:
    - restart backuppc
  tags:
    - backuppc
    - configuration
    - clients

- name: create hosts configuration
  template:
    dest="/etc/backuppc/{{ item.name }}.pl"
    src="backuppc-{{ item.os }}-{{ item.type }}.j2"
    owner=backuppc
    group=www-data
    mode=0640
  with_items: backuppc_hosts
  notify:
    - restart backuppc
  tags:
    - backuppc
    - configuration
    - clients

- name: correct windbind configuration
  lineinfile: "dest=/etc/nsswitch.conf regexp='^hosts:' line='hosts:          files mdns4_minimal [NOTFOUND=return] dns mdns4 wins'"
  notify:
    - restart windbind
  tags:
    - backuppc
    - configuration

# ssh key
- name: generate a ssh key
  user:
    name=backuppc
    generate_ssh_key=yes
  register: ssh_key_generation
  tags:
    - backuppc
    - ssh
    - clients

- name: fetch generated public ssh key
  fetch:
    src=/var/lib/backuppc/.ssh/id_rsa.pub
    dest=/tmp/fetched
  when: ssh_key_generation|changed
  register: ssh_key_fetched
  tags:
    - backuppc
    - ssh
    - clients
    - configuration

- name: add users to backuppc htpasswd file
  htpasswd: path=/etc/backuppc/htpasswd name={{ item.name }} password={{ item.pass }} owner=backuppc group=www-data mode=0640
  with_items: backuppc_users
  tags:
    - backuppc
    - web site
    - credientals

